// C++ program for different tree traversals
#include <iostream>
using namespace std;
 
class Node {
    public:
    int data;
    Node *left, *right;
    Node(int data)
    {
        this->data = data;
        left = right = NULL;
    }
};
 
//PostOrder
void printPostorder(class Node* node)
{
    if (node == NULL)
        return;

    printPostorder(node->left);

    printPostorder(node->right);

    cout << node->data << " ";
}
 
//Inorder 
void printInorder(class Node* node)
{
    if (node == NULL)
        return;

    printInorder(node->left);

    cout << node->data << " ";

    printInorder(node->right);
}
//PreOrder
void printPreorder(struct Node* node)
{
    if (node == NULL)
        return;

    cout << node->data << " ";

    printPreorder(node->left);

    printPreorder(node->right);
}
 
int main()
{
    class Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
 
    cout << "\nPreorder traversal of tree is \n";
    printPreorder(root);
 
    cout << "\nInorder traversal of  tree is \n";
    printInorder(root);
 
    cout << "\nPostorder traversal of tree is \n";
    printPostorder(root);
 
    return 0;
}
